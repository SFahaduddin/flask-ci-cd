name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9  # Replace with your Python version

      - name: Install Dependencies
        run: |
          python -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate the virtual environment
          python -m ensurepip --upgrade  # Ensure pip is installed
          pip install --upgrade pip  # Upgrade pip to latest version
          pip install -r requirements.txt  # Install dependencies #/

      - name: Debugging - Check directory structure
        run: |
          ls -R venv/  # List files to check pip existence
          which pip  # Where is pip located?
          python --version  # Confirm Python version
          pip --version  # Confirm pip version
          
      - name: Run Tests
        run: pytest
  # Deployment Job
  deploy:
    runs-on: ubuntu-latest
    needs: build   # Ensures deploy runs only after the build job is successful.
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your region

      - name: Deploy to EC2
        run: |
          # Install AWS CLI if not already installed
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

          # Deploy your app to AWS (example for EC2 deployment)
          aws ec2 describe-instances --instance-ids i-1234567890abcdef0  # Example command
          # Replace with actual deployment commands for your app (e.g., copy files, restart EC2, etc.)
